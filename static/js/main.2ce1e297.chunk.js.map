{"version":3,"sources":["Model.js","App.js","index.js"],"names":["material","THREE","color","convertSRGBToLinear","roughness","clearcoat","clearcoatRoughness","Model","props","group","useRef","nodes","useGLTF","ref","dispose","Reflector","resolution","receiveShadow","mirror","blur","mixBlur","mixStrength","depthScale","minDepthThreshold","maxDepthThreshold","position","scale","rotation","Math","PI","args","Material","metalness","castShadow","geometry","H","L","Heart","Light","useFrame","_","current","x","clock","elapsedTime","width","height","intensity","onUpdate","self","lookAt","Rig","useState","vec","useThree","camera","mouse","lerp","set","CameraShake","maxYaw","maxPitch","maxRoll","yawFrequency","pitchFrequency","rollFrequency","App","concurrent","shadowMap","pixelRatio","fov","attach","fallback","OrbitControls","preload","RectAreaLightUniformsLib","init","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ce1e297.chunk.js","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useGLTF, Reflector } from '@react-three/drei'\n\nconst material = new THREE.MeshPhysicalMaterial({\n  color: new THREE.Color('#bb86a1').convertSRGBToLinear(),\n  roughness: 0,\n  clearcoat: 1,\n  clearcoatRoughness: 0,\n})\n\nexport default function Model(props) {\n  const group = useRef()\n  const { nodes } = useGLTF('/love.glb')\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <Reflector\n        resolution={1024}\n        receiveShadow\n        mirror={0}\n        blur={[500, 100]}\n        mixBlur={1}\n        mixStrength={0.5}\n        depthScale={1}\n        minDepthThreshold={0.8}\n        maxDepthThreshold={1}\n        position={[0, 0, 8]}\n        scale={[2, 2, 1]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n        args={[70, 70]}>\n        {(Material, props) => <Material metalness={0.25} color=\"#eea6b1\" roughness={1} {...props} />}\n      </Reflector>\n      <mesh receiveShadow castShadow material={material} geometry={nodes.H.geometry} position={[2.5, 0.17, 1.78]}\n            scale={[6, 6, 6]}\n            rotation={[1.58, 0.028, 3.5]}\n      />\n      <mesh receiveShadow castShadow material={material} geometry={nodes.L.geometry} position={[-10, 0.26, -4]}\n            scale={[6,6,6]}\n            rotation={[1.59, 0, 4.0]}\n      />\n      <mesh\n        receiveShadow\n        castShadow\n        material={material}\n        geometry={nodes.Heart.geometry}\n        position={[-6, 0.5, -1.5]}\n        scale={[0.5, 0.5, 0.5]}\n        rotation={[-0, 2.8, -0]}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload('/pink-d.glb')\n","import * as THREE from 'three'\nimport { Suspense, useRef, useState } from 'react'\nimport { RectAreaLightUniformsLib } from 'three/examples/jsm/lights/RectAreaLightUniformsLib'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { OrbitControls, CameraShake } from '@react-three/drei'\nimport Model from './Model'\n\nRectAreaLightUniformsLib.init()\n\nfunction Light() {\n  const ref = useRef()\n  useFrame((_) => (ref.current.rotation.x = _.clock.elapsedTime))\n  return (\n    <group ref={ref}>\n      <rectAreaLight width={15} height={100} position={[30, 30, -10]} intensity={5} onUpdate={(self) => self.lookAt(0, 0, 0)} />\n    </group>\n  )\n}\n\nfunction Rig() {\n  const [vec] = useState(() => new THREE.Vector3())\n  const { camera, mouse } = useThree()\n  useFrame(() => camera.position.lerp(vec.set(mouse.x * 2, 1, 60), 0.05))\n  return <CameraShake maxYaw={0.01} maxPitch={0.01} maxRoll={0.01} yawFrequency={0.5} pitchFrequency={0.5} rollFrequency={0.4} />\n}\n\nexport default function App() {\n  return (\n    <Canvas concurrent shadowMap pixelRatio={[1, 2]} camera={{ position: [0, 160, 160], fov: 20 }}>\n      <fog attach=\"fog\" args={['lightpink', 60, 100]} />\n      <Suspense fallback={null}>\n        <ambientLight intensity={1} />\n        <Model position={[-4.5, -4, 0]} rotation={[0, -2.8, 0]} />\n        <spotLight position={[50, 50, -30]} castShadow />\n        <pointLight position={[-10, -10, -10]} color=\"red\" intensity={3} />\n        <pointLight position={[0, -5, 5]} intensity={0.5} />\n        <directionalLight position={[0, -5, 0]} color=\"red\" intensity={2} />\n        <Light />\n        <Rig />\n      </Suspense>\n      <OrbitControls />\n    </Canvas>\n  )\n}\n","import ReactDOM from 'react-dom'\nimport './styles.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}